{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.js","components/CoutryPicker/CountryPIcker.js","components/Chart/Chart.js","components/Header/Header.js","App.js","index.js","components/CoutryPicker/CountryPIcker.module.css","components/Chart/Chart.module.css","COVID- 19 (1).png","App.module.css"],"names":["module","exports","url","fetchData","country","a","changableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","modifiedData","map","d","total","date","reportDate","countries","name","console","log","Cards","arr","title","value","text","border_color","styles","infected","className","container","Grid","spacing","justify","item","component","Card","card","CardContent","Typography","color","gutterBottom","cardTitle","countUp","start","end","duration","separator","Date","toDateString","cardText","CountryPicker","handleCountryChange","useState","fetchCountries","setFetchCountries","useEffect","fetchAPI","FormControl","variant","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","dailyData","setDailyData","fetchApi","resp","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","Header","src","coronaImg","alt","App","setData","setCountry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b16600b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"lastUpdate\":\"Cards_lastUpdate__32tr2\",\"countUp\":\"Cards_countUp__3r9kI\"};","import axios from \"axios\";\nconst url = \"https://covid19.mathdro.id/api\";\nexport const fetchData = async (country) => {\n  let changableUrl = url;\n  if (country) {\n    changableUrl = `${url}/countries/${country}`;\n  }\n  const {\n    data: { confirmed, recovered, deaths, lastUpdate },\n  } = await axios.get(changableUrl);\n  return { confirmed, recovered, deaths, lastUpdate };\n};\nexport const fetchDailyData = async () => {\n  const { data } = await axios.get(`${url}/daily`);\n  const modifiedData = data.map((d) => ({\n    confirmed: d.confirmed.total,\n    deaths: d.deaths.total,\n    date: d.reportDate,\n  }));\n  return modifiedData;\n};\nexport const countries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Cards.module.css\";\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  const arr = [\n    {\n      title: \"Infected\",\n      value: confirmed.value,\n      text: \"Number of infected patients of COVID-19\",\n      border_color: `${styles.infected}`,\n    },\n    {\n      title: \"Recovered\",\n      value: recovered.value,\n      text: \"Number of recovered patients of COVID-19\",\n      border_color: `${styles.recovered}`,\n    },\n    {\n      title: \"Deaths\",\n      value: deaths.value,\n      text: \"Number of Deaths caused by COVID-19\",\n      border_color: `${styles.deaths}`,\n    },\n  ];\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Grid container spacing={3} justify=\"center\">\n          {arr.map((data) => (\n            <Grid\n              item\n              component={Card}\n              className={`${styles.card} ${data.border_color}`}\n            >\n              <CardContent>\n                <div>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    className={styles.cardTitle}\n                  >\n                    {data.title}\n                  </Typography>\n                  <CountUp\n                    className={styles.countUp}\n                    start={0}\n                    end={data.value}\n                    duration={1}\n                    separator=\",\"\n                  />\n                  <Typography className={styles.lastUpdate}>\n                    {new Date(lastUpdate).toDateString()}\n                  </Typography>\n                  <Typography className={styles.cardText}>\n                    {data.text}\n                  </Typography>\n                </div>\n              </CardContent>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </>\n  );\n};\nexport default Cards;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  InputLabel,\n  NativeSelect,\n} from \"@material-ui/core\";\nimport { countries } from \"../../api/\";\nimport styles from \"./CountryPIcker.module.css\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n  const [fetchCountries, setFetchCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchCountries(await countries());\n    };\n    fetchAPI();\n  }, [setFetchCountries]);\n\n  return (\n    <>\n      <FormControl variant=\"filled\" className={styles.formControl}>\n        <NativeSelect\n          defaultValue=\"\"\n          onChange={(e) => handleCountryChange(e.target.value)}\n        >\n          <option value=\"\">Global</option>\n          {fetchCountries.map((country, i) => (\n            <option key={i} value={country}>\n              {country}\n            </option>\n          ))}\n        </NativeSelect>\n      </FormControl>\n    </>\n  );\n};\nexport default CountryPicker;\n","import React, { useEffect, useState } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  const fetchApi = async () => {\n    const resp = await fetchDailyData();\n    setDailyData(resp);\n  };\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"rgba(186, 171, 218, 0.5)\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"rgba(232, 74, 95, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(232, 74, 95, 0.5)\",\n              \" rgba(121, 215, 15, 0.5)\",\n              \"rgba(186, 171, 218, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: {\n          display: true,\n          text: `Current data of ${country}`,\n        },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\nexport default Chart;\n","import React from \"react\";\nimport coronaImg from \"../../COVID- 19 (1).png\";\nexport const Header = () => {\n  return (\n    <>\n      <header>\n        <img src={coronaImg} alt=\"Covid-19\" />\n      </header>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchData } from \"./api\";\nimport Cards from \"./components/Cards/Cards\";\nimport CountryPicker from \"./components/CoutryPicker/CountryPIcker\";\nimport Chart from \"./components/Chart/Chart\";\nimport { Header } from \"./components/Header/Header\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState(\"\");\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const fetchApi = async () => {\n    const resp = await fetchData(country);\n    setData(resp);\n  };\n  const handleCountryChange = async (country) => {\n    const resp = await fetchData(country);\n    setData(resp);\n    setCountry(country);\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <Header />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPIcker_formControl__2bx6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","module.exports = __webpack_public_path__ + \"static/media/COVID- 19 (1).c53c344b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}